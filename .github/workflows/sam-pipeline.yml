on:
  push:
    branches:
      - main
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10.8']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install    
      # sam build 
      - run: poetry export -f requirements.txt > requirements.txt; mkdir package; poetry lock; poetry run pip install -r requirements.txt -t ./package; cp -r src/* package/; cp scripts/sql/*.sql package/; sam build --template template.yaml --use-container; cp -r package/psycopg2/* .aws-sam/build/ChatgptTelegramBotLambda/psycopg2; sam package --output-template-file packaged.yaml --s3-bucket chatgpt-telegram-bot-lambda; sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --template-file packaged.yaml --region us-east-1 --capabilities CAPABILITY_IAM --stack-name ChatgptTelegramBotLambda
